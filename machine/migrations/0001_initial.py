# Generated by Django 3.2.23 on 2024-06-03 20:12

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=100)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Bandeira',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(default='Desconhecido', max_length=250)),
                ('debito_vista', models.DecimalField(decimal_places=2, default=0.0, max_digits=8)),
                ('debito_pre', models.DecimalField(decimal_places=2, default=0.0, max_digits=8)),
                ('credito_vista', models.DecimalField(decimal_places=2, default=0.0, max_digits=8)),
                ('credito_pre', models.DecimalField(decimal_places=2, default=0.0, max_digits=8)),
                ('credito_2x', models.DecimalField(decimal_places=2, default=0.0, max_digits=8)),
                ('credito_3x', models.DecimalField(decimal_places=2, default=0.0, max_digits=8)),
                ('credito_4x', models.DecimalField(decimal_places=2, default=0.0, max_digits=8)),
                ('credito_5x', models.DecimalField(decimal_places=2, default=0.0, max_digits=8)),
                ('credito_6x', models.DecimalField(decimal_places=2, default=0.0, max_digits=8)),
                ('credito_7x', models.DecimalField(decimal_places=2, default=0.0, max_digits=8)),
                ('credito_8x', models.DecimalField(decimal_places=2, default=0.0, max_digits=8)),
                ('credito_9x', models.DecimalField(decimal_places=2, default=0.0, max_digits=8)),
                ('credito_10x', models.DecimalField(decimal_places=2, default=0.0, max_digits=8)),
                ('credito_11x', models.DecimalField(decimal_places=2, default=0.0, max_digits=8)),
                ('credito_12x', models.DecimalField(decimal_places=2, default=0.0, max_digits=8)),
                ('credito_moeda', models.DecimalField(decimal_places=2, default=0.0, max_digits=8)),
            ],
        ),
        migrations.CreateModel(
            name='Estabelecimento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('razao_social', models.CharField(default='Desconhecido', max_length=250)),
                ('codigo', models.CharField(default='0', max_length=100)),
                ('taxa_debito', models.DecimalField(decimal_places=2, default=3.5, max_digits=5)),
                ('taxa_credito', models.DecimalField(decimal_places=2, default=5.0, max_digits=5)),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='estabelecimento', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Operadora',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(default='Desconhecido', max_length=250)),
            ],
        ),
        migrations.CreateModel(
            name='Venda',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tipo', models.CharField(choices=[('Débito à vista', 'Débito à vista'), ('Débito Pré-pago', 'Débito Pré-pago'), ('Crédito à vista', 'Crédito à vista'), ('Crédito Pré-pago', 'Crédito Pré-pago'), ('Crédito conversor moeda', 'Crédito conversor moeda'), ('Crédito parcelado loja 2x', 'Crédito parcelado loja 2x'), ('Crédito parcelado loja 3x', 'Crédito parcelado loja 3x'), ('Crédito parcelado loja 4x', 'Crédito parcelado loja 4x'), ('Crédito parcelado loja 5x', 'Crédito parcelado loja 5x'), ('Crédito parcelado loja 6x', 'Crédito parcelado loja 6x'), ('Crédito parcelado loja 7x', 'Crédito parcelado loja 7x'), ('Crédito parcelado loja 8x', 'Crédito parcelado loja 8x'), ('Crédito parcelado loja 9x', 'Crédito parcelado loja 9x'), ('Crédito parcelado loja 10x', 'Crédito parcelado loja 10x'), ('Crédito parcelado loja 11x', 'Crédito parcelado loja 11x'), ('Crédito parcelado loja 12x', 'Crédito parcelado loja 12x')], default='Crédito à vista', max_length=30)),
                ('data_venda', models.DateTimeField(default=django.utils.timezone.now)),
                ('previsao_pgto', models.DateField(default=django.utils.timezone.now)),
                ('valor_bruto', models.DecimalField(decimal_places=2, default=0.0, max_digits=8)),
                ('taxa', models.DecimalField(decimal_places=2, default=0.0, max_digits=8)),
                ('valor_tarifa', models.DecimalField(decimal_places=2, default=0.0, max_digits=8)),
                ('valor_cobranca', models.DecimalField(decimal_places=2, default=0.0, max_digits=8)),
                ('valor_devido', models.DecimalField(decimal_places=2, default=0.0, max_digits=8)),
                ('lucro', models.DecimalField(decimal_places=2, default=0.0, max_digits=8)),
                ('nr_maquina', models.CharField(blank=True, max_length=20, null=True)),
                ('cod_venda', models.CharField(blank=True, max_length=20, null=True)),
                ('pago', models.BooleanField(default=False)),
                ('contesta', models.BooleanField(default=False)),
                ('valor_contestado', models.DecimalField(decimal_places=2, default=0.0, max_digits=8)),
                ('bandeira', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='venda', to='machine.bandeira')),
                ('estabelecimento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='venda', to='machine.estabelecimento')),
            ],
        ),
        migrations.AddField(
            model_name='bandeira',
            name='operadora',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='bandeira', to='machine.operadora'),
        ),
    ]
